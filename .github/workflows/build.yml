# Main workflow for building and checking code quality
name: Build

# Trigger the workflow on push and pull request events for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Prevent multiple workflows from running simultaneously on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Global environment variables
env:
  FORCE_COLOR: 1  # Enable colored output in logs
  TERM: xterm-256color  # Terminal type for better formatting
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.PALANTIR_GHA }}

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        configuration: [Release]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ${{github.workspace}}/build
        shell: pwsh
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} `
                  -DBUILD_EXAMPLES=OFF `
                  -DGITHUB_TOKEN=${{env.GITHUB_TOKEN}}

      - name: Configure CMake (macOS)
        if: matrix.os == 'macos-latest'
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                  -DBUILD_EXAMPLES=OFF \
                  -DGITHUB_TOKEN=${{env.GITHUB_TOKEN}}

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{env.BUILD_TYPE}} --parallel

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sauron-sdk-curl_${{ matrix.os }}-${{ runner.arch }}-latest
          path: |
            ${{github.workspace}}/bin/**/*
            ${{github.workspace}}/_deps/api_spec-src/cpp-sdk/include/**/*.h
            ${{github.workspace}}/_deps/api_spec-src/cpp-sdk/include/**/*.hpp
            ${{github.workspace}}/../sauron-sdk-curl/include/**/*.h
            ${{github.workspace}}/../sauron-sdk-curl/include/**/*.hpp
          if-no-files-found: error

  cleanup-artifacts:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Delete old artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: sauron-sdk-curl_*
          failOnError: false
